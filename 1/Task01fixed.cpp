//FIXME Некорректное оформление формулировки задания

/* Археолог нашел N артефактов. Известны веса(сi) и налоговое бремя(di) находок.
 * Нужно выбрать такое подмножество находок, чтобы их суммарный вес превысил
 * Z кг, а их общее налоговое бремя оказалось минимальным. Известно, что решение
 * единственно. Укажите порядковые номера вещей, которые нужно взять. Исходные
 * данные находятся в текстовом файле, в первой строке указаны N и Z, а во
 * второй строке значения весов(в кг), в третьей - величина налога по каждой
 * находке. Вывести так же суммарный вес и общую ценность результата.
*/

//FIXME Логика решения задачи вынесена в отдельный файл
#include "Task01.h"

int main() {
    //FIXME Установа локали запрещена
    //setlocale(LC_ALL, "russian");


    //FIXME Чтение из файла вынесено в отдельную функцию
    //ifstream input("t.txt");
    //if (!input.is_open()) {
    //    cout << "Ошибка открытия файла!" << endl;
    //}
    //int N, Z;
    //input >> N >> Z; // Считываем количество предметов и минимальный вес Z

    int Z;
    vector<int> weights; // Вектор для хранения весов предметов
    vector<int> taxes; // Вектор для хранения налогового бремени предметов

    // FIXME Чтение из файла вынесено в отдельную функцию
    //// Считываем веса предметов
    //for (int i = 0; i < N; ++i)
    //{
    //    int value;
    //    input >> value;
    //    weights.push_back(value);
    //}
    //// Считываем налоговое бремя предметов
    //for (int i = 0; i < N; ++i)
    //{
    //    int value;
    //    input >> value;
    //    taxes.push_back(value);
    //}
    //input.close();

    if (!ReadInputData("../1/t.txt", Z, weights, taxes)) {
        return 1;
    }
    // FIXME Логика алгоритма изменена
    //KnapSackSolution(Z, weights, taxes);

    Solution solution = KnapSackSolution(Z, weights, taxes);
    PrintSolution(solution);

    // FIXME Отсутствовал "return 0;"
    return 0;
}
